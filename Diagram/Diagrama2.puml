@startuml TaskerApp

class APP{
    - tarea: Tarea

    - completada: LISTA <Tarea>
    - pendiente: Lista <Tarea>

    - buscador: Busqueda

    - admin: Administrador


    +buscarTarea()
    +ordenarTarea()
    ---

    + crearTareaAPP(){
        this.admin.crearTarea()
    }// 
    + editarTareaAPP() //this.admin.xxx
    + eliminarTareaAPP() //this.admin.xxx
}

class Tarea{
    - titulo: string
    - descripci√≥n: string
    - fechaDeVencimiento: number
    - prioridad: number
    - categoria:string
    - etiqueta:string
    - porcentajeDeAvance: number

    + getters&setters()
}


class Administrador<opcion 1>{
    + crearTarea() // todo el codigo
    + editarTarea()
    + eliminarTarea()
}

class Ordenamiento{
    + ordenarPorTitulo(valor:string):MyNode<T>
    + ordenarPorFecha(valor: Date):MyNode<T>
    '+ ordenarPorPrioridad(valor:string):MyNode<T>
}

class Busqueda{
    + buscarPorTitulo(valor:string):MyNode<T>
    + buscarPorFecha(valor: Date):MyNode<T>
    '+ busquedaPorPrioridad(valor:string):MyNode<T>
}

class LISTA{
    - head: MyNode<T>;
    + insertOrdered(value: Tarea): MyNode<Tarea>
}

class MyNode<Tarea>{
    - value: T
    - next: MyNode<T>

    + getter&setter()

}


APP .u.|> Busqueda
APP .u.|> Ordenamiento
APP <|-- Tarea

APP .d.|> Administrador


LISTA *-- MyNode
MyNode *-- Tarea

'Tarea <|.. Administrador

@enduml

Creo tarea 1:
[
    Lista
    [
        tarea1{propiedades}
    ]
]

Creo tarea 2:
[
    Lista
    [
        tarea1{propiedades}
        tarea2{propiedades}
    ]
]

crearTarea() {
    //codigo para la creacion

    //push tarea
}

editarTarea() {

}

tarea3{"..","descripcion"...}